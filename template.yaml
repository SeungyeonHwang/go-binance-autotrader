AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    VpcConfig:
      SubnetIds:
        - subnet-0efcde944b0b461c2
      SecurityGroupIds:
        - sg-079a6d2cb621722ac
    ReservedConcurrentExecutions: 5

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action: ssm:GetParameter
                Resource: arn:aws:ssm:ap-northeast-1:027320337304:parameter/binance/*
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                Resource: '*'

  SwingApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        openapi: "3.0.0"
        info:
          version: "1.0.0"
        paths:
          /swing/balance:
            get:
              x-amazon-apigateway-integration:
                httpMethod: GET
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SwingBalanceFunction.Arn}/invocations
          /swing/position:
            get:
              x-amazon-apigateway-integration:
                httpMethod: GET
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SwingPositionFunction.Arn}/invocations
          /swing/webhook-order:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SwingWebHookOrderFunction.Arn}/invocations

  SwingBalanceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/swing
      Handler: main.go
      Runtime: go1.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        SwingBalance:
          Type: Api
          Properties:
            Path: /swing/balance
            Method: get

  SwingPositionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/swing
      Handler: main.go
      Runtime: go1.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        SwingBalance:
          Type: Api
          Properties:
            Path: /swing/position
            Method: get

  SwingWebHookOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/swing
      Handler: main.go
      Runtime: go1.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        SwingWebHookOrder:
          Type: Api
          Properties:
            Path: /swing/webhook-order
            Method: post
